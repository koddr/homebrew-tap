# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yatr < Formula
  desc "Yet Another Task Runner (or yatr for a short) allows you to organize and automate your routine operations that you normally do in Makefile (or else) for each project.
"
  homepage "https://github.com/koddr/yatr"
  version "1.2.0"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_darwin_arm64.tar.gz"
      sha256 "0c5373c99f8eb62b27d2266bcd7418d696d20e3a923a1426d03f8669e3db300c"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_darwin_amd64.tar.gz"
      sha256 "9e330debcd542b7a77871dd12c84342a93dd8dfc5e0146aa62985d106968f561"

      def install
        bin.install "yatr"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_linux_arm64.tar.gz"
      sha256 "d7afb3353fc31ad33786c8614fc7558b9d0c54fc3784b8f6d8ff9f8115d39a88"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_linux_amd64.tar.gz"
      sha256 "1b964b0021d51909c80038287293923b3afed5d9813f9f9adb9c3838fe68e1fc"

      def install
        bin.install "yatr"
      end
    end
  end

  def caveats
    <<~EOS
      After install, run yatr with -i option for generate initial tasks.yml file in the current dir:

      $ yatr -i

      Prepare your task file in one of the supported formats: JSON, YAML, TOML, or HCL (Terraform).

      ðŸ’¡ Note: See the repository's Wiki page (https://github.com/koddr/yatr/wiki) to understand structure of the task file.

      And now, run yatr with options:

      $ yatr -p ./path/to/tasks.yml

      Done! Your tasks have been executed.
    EOS
  end
end
