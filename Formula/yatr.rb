# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yatr < Formula
  desc "Yet Another Task Runner (or yatr for a short) allows you to organize and automate your routine operations that you normally do in Makefile (or else) for each project.
"
  homepage "https://github.com/koddr/yatr"
  version "1.1.0"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/koddr/yatr/releases/download/v1.1.0/yatr_1.1.0_darwin_arm64.tar.gz"
      sha256 "544335676d3f66eff08e533aa96611c70ae69488b8a14607590111a60a45e72a"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.1.0/yatr_1.1.0_darwin_amd64.tar.gz"
      sha256 "346972480a858403ad8bb42f6853ab6dd832d031ed91a4fee680e6c88ce1262b"

      def install
        bin.install "yatr"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/koddr/yatr/releases/download/v1.1.0/yatr_1.1.0_linux_arm64.tar.gz"
      sha256 "0be418dc3c5546f43b4218729c2de78dec31893b9521a6eb8fd5944c2414673b"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.1.0/yatr_1.1.0_linux_amd64.tar.gz"
      sha256 "779913fafab9631ce7d20e053feac5c3d7df99a97366131e431d8ca9589cd4c2"

      def install
        bin.install "yatr"
      end
    end
  end

  def caveats
    <<~EOS
      After install, run yatr with -i option for generate initial tasks.yml file in the current dir:

      $ yatr -i

      Prepare your task file in one of the supported formats: JSON, YAML, TOML, or HCL (Terraform).

      ðŸ’¡ Note: See the repository's Wiki page (https://github.com/koddr/yatr/wiki) to understand structure of the task file.

      And now, run yatr with options:

      $ yatr -p ./path/to/tasks.yml

      Done! Your tasks have been executed.
    EOS
  end
end
