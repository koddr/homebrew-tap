# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yatr < Formula
  desc "Yet Another Task Runner (or yatr for a short) allows you to organize and automate your routine operations that you normally do in Makefile (or else) for each project.
"
  homepage "https://github.com/koddr/yatr"
  version "1.2.0"
  license "Apache 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_darwin_arm64.tar.gz"
      sha256 "944cd326bdc76e3a35e6ca5e76f4f9899fe8afb936207d780c0d5d2437405380"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_darwin_amd64.tar.gz"
      sha256 "a02d9b5e1b2ce20eb4935a2cdeb1b306f08ec24eff653f5bff99ca70bcac41d0"

      def install
        bin.install "yatr"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_linux_arm64.tar.gz"
      sha256 "106f4fd086e1a1a49fb9badbac7f56dcdac9e82e5965648c62df0058b639d733"

      def install
        bin.install "yatr"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/koddr/yatr/releases/download/v1.2.0/yatr_1.2.0_linux_amd64.tar.gz"
      sha256 "ebb5aaf3ec330e35971460bf8920a9fb3ecf48f5a399680a6e1157ffe1d39b7a"

      def install
        bin.install "yatr"
      end
    end
  end

  def caveats
    <<~EOS
      After install, run yatr with -i option for generate initial tasks.yml file in the current dir:

      $ yatr -i

      Prepare your task file in one of the supported formats: JSON, YAML, TOML, or HCL (Terraform).

      ðŸ’¡ Note: See the repository's Wiki page (https://github.com/koddr/yatr/wiki) to understand structure of the task file.

      And now, run yatr with options:

      $ yatr -p ./path/to/tasks.yml

      Done! Your tasks have been executed.
    EOS
  end
end
